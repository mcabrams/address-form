{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./src/scripts/main.js\":[function(require,module,exports){\n/* global  _ */\n/* jshint devel:true */\n( function ($, window, document, undefined ) {\n  'use strict';\n\n  var FORM_COMPONENTS = require('./form-components.js');\n  var googlePlacesAutocomplete = require('./google-places-autocomplete.js');\n  var assignFormSubmitHandler = require('./handle-form-submit.js');\n  var assignLiveValidators = require('./assign-live-validators.js');\n\n  $( document ).ready(function () {\n\n    function onDocumentReady() {\n      // If jvFloat is available, initialize the fields with it\n      if ($.isFunction(jQuery.fn.jvFloat)) {\n        $('#address-form').children().jvFloat();\n      }\n\n      googlePlacesAutocomplete.setupGoogleMaps();\n    }\n\n    onDocumentReady();\n    assignFormSubmitHandler('#address-form');\n    assignLiveValidators('#address-form');\n  });\n})( jQuery, window, document );\n\n},{\"./assign-live-validators.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/assign-live-validators.js\",\"./form-components.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/form-components.js\",\"./google-places-autocomplete.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/google-places-autocomplete.js\",\"./handle-form-submit.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/handle-form-submit.js\"}],\"/Users/matthewabrams/git/personal/address-form/src/scripts/assign-live-validators.js\":[function(require,module,exports){\n'use strict';\n\nvar FORM_COMPONENTS = require('./form-components.js');\n\nmodule.exports = function(formSelector) {\n  // Iterate over inputs and add info to formData object\n  $(formSelector).find('input:not([type=submit])').each(function() {\n    var $input = $( this );\n    var formComponent = _.where(FORM_COMPONENTS, {htmlId: $input.attr('id')})[0];\n\n    $input.blur(function(event) {\n      console.log( formComponent.valid(event.target.value) );\n    });\n  });\n};\n\n},{\"./form-components.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/form-components.js\"}],\"/Users/matthewabrams/git/personal/address-form/src/scripts/display-form-data.js\":[function(require,module,exports){\n'use strict';\n\nvar FORM_COMPONENTS = require('./form-components.js');\n\nmodule.exports = function(formData) {\n  var displayedUl = $( '<ul/>' );\n\n  _.each(formData, function(fieldValue, fieldName){\n    displayedUl.append($('<li>' + FORM_COMPONENTS[fieldName].textToDisplay + ': ' + fieldValue + '</li>'));\n  });\n\n  $('#address-summary').append(displayedUl);\n};\n\n},{\"./form-components.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/form-components.js\"}],\"/Users/matthewabrams/git/personal/address-form/src/scripts/form-components.js\":[function(require,module,exports){\n'use strict';\nvar defaultValid = function(value) {\n  if (typeof value !== 'undefined' && value !== '') {\n    return true;\n  }\n  return false;\n};\n\nvar FORM_COMPONENTS = {\n  'address-line1-input': {\n    textToDisplay: 'Address Line 1',\n    googleType: 'street_number',\n    googleNameLength: 'long_name',\n    htmlId: 'address-line1-input',\n    valid: defaultValid\n  },\n  'address-line2-input': {\n    textToDisplay: 'Address Line 2',\n    googleType: 'subpremise',\n    googleNameLength: 'long_name',\n    htmlId: 'address-line2-input',\n    valid: defaultValid\n  },\n  'city-input': {\n    textToDisplay: 'City',\n    googleType: 'locality',\n    googleNameLength: 'long_name',\n    htmlId: 'city-input',\n    valid: defaultValid\n  },\n  'first-name-input': {\n    textToDisplay: 'First Name',\n    googleType: null,\n    googleNameLength: null,\n    htmlId: 'first-name-input',\n    valid: defaultValid\n  },\n  'last-name-input': {\n    textToDisplay: 'Last Name',\n    googleType: null,\n    googleNameLength: null,\n    htmlId: 'last-name-input',\n    valid: defaultValid\n  },\n  'state-input': {\n    textToDisplay: 'State',\n    googleType: 'administrative_area_level_1',\n    googleNameLength: 'short_name',\n    htmlId: 'state-input',\n    valid: defaultValid\n  },\n  'zip-input': {\n    textToDisplay: 'Zip',\n    googleType: 'postal_code',\n    googleNameLength: 'short_name',\n    htmlId: 'zip-input',\n    valid: defaultValid\n  }\n};\n\nmodule.exports = FORM_COMPONENTS;\n\n},{}],\"/Users/matthewabrams/git/personal/address-form/src/scripts/google-places-autocomplete.js\":[function(require,module,exports){\n/* global google, _ */\n'use strict';\n\nvar FORM_COMPONENTS = require('./form-components.js');\n\nvar fillInAddress = function(autocomplete) {\n  // Get the place details from the autocomplete object.\n  var place = autocomplete.getPlace();\n\n  _.each(FORM_COMPONENTS, function(fieldValue, fieldName){\n    if (fieldName !== 'first-name-input' && fieldName !== 'last-name-input') {\n      document.getElementById(fieldName).value = '';\n      document.getElementById(fieldName).disabled = false;\n    }\n  });\n\n  var streetNumber;\n  var route;\n\n  // Get each component of the address from the place details\n  // and fill the corresponding field on the form.\n  _.each(place.address_components, function(addressComponent){\n    var addressType = addressComponent.types[0];\n\n    var addressInfoLookup = _.where(FORM_COMPONENTS, {googleType: addressType})[0];\n\n    if (addressType === 'street_number') {\n      streetNumber = addressComponent.long_name;\n      return;\n    }\n\n    if (addressType === 'route') {\n      route = addressComponent.long_name;\n      return;\n    }\n\n    if (typeof addressInfoLookup !== 'undefined') {\n      var val = addressComponent[addressInfoLookup.googleNameLength];\n      document.getElementById(addressInfoLookup.htmlId).value = val;\n    }\n  });\n\n  $('#address-line1-input').blur();\n  if (typeof streetNumber !== 'undefined' && typeof route !== 'undefined') {\n    $('#address-line1-input').val(streetNumber + ' ' + route);\n  }\n  $('#address-line2-input').focus();\n};\n\nvar setupGoogleMaps = function() {\n  var autocompleteInput = document.getElementById('address-line1-input');\n\n  var northAmericaBounds = new google.maps.LatLngBounds(\n      new google.maps.LatLng(83.162102, -52.233040),\n      new google.maps.LatLng(5.499550, -167.276413)\n    );\n\n  var options = {\n    bounds: northAmericaBounds,\n    types: ['geocode']\n  };\n\n  var autocomplete = new google.maps.places.Autocomplete(autocompleteInput, options);\n\n  // When the user selects an address from the dropdown,\n  // populate the address fields in the form.\n  google.maps.event.addListener(autocomplete, 'place_changed', function() {\n    fillInAddress(autocomplete);\n  });\n\n  // Prevent form submission when hitting enter on autocomplete\n  $(autocompleteInput).keypress(function(e) {\n    if (e.which === 13) {\n      return false;\n    }\n  });\n};\n\nmodule.exports = {\n  setupGoogleMaps: setupGoogleMaps,\n  fillInAddress: fillInAddress\n};\n\n},{\"./form-components.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/form-components.js\"}],\"/Users/matthewabrams/git/personal/address-form/src/scripts/handle-form-submit.js\":[function(require,module,exports){\n'use strict';\n\n// var validateFormData = require('./validate-form-data.js');\nvar displayFormData = require('./display-form-data.js');\n\nmodule.exports = function($form) {\n  $($form).submit(function() {\n    var formData = {};\n\n    // Iterate over inputs and add info to formData object\n    $(this).find('input:not([type=submit])').each(function() {\n      var $input = $( this );\n      formData[$input.attr('id')] = $input.val();\n    });\n\n    validateFormData(formData);\n\n    displayFormData(formData);\n\n    event.preventDefault();\n  });\n};\n\n},{\"./display-form-data.js\":\"/Users/matthewabrams/git/personal/address-form/src/scripts/display-form-data.js\"}]},{},[\"./src/scripts/main.js\"]);\n"],"file":"bundle.js","sourceRoot":"/source/"}